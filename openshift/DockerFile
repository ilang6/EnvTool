# Base image with CUDA 12.8.1 and UBI 9
FROM nvidia/cuda:12.8.1-base-ubi9

# Install necessary packages
RUN yum install -y \
    python3.12 \
    python3.12-pip \
    tar \
    gzip \
    nodejs \
    unixODBC \
    unixODBC-devel \
    && yum clean all

# Set Python 3.12 as default
RUN alternatives --install /usr/bin/python python /usr/bin/python3.12 1 \
    && alternatives --install /usr/bin/pip pip /usr/bin/pip3.12 1

# Upgrade pip and install cuda-python
RUN pip install --upgrade pip \
    && pip install cuda-python

# Set environment variables
ENV CODE_SERVER_VERSION=4.89.1
ENV CODE_SERVER_INSTALL_DIR=/usr/lib/code-server
ENV PATH="$CODE_SERVER_INSTALL_DIR/bin:$PATH"

# Download and install code-server
RUN curl -fL https://github.com/coder/code-server/releases/download/v$CODE_SERVER_VERSION/code-server-$CODE_SERVER_VERSION-linux-amd64.tar.gz \
    | tar -C /usr/lib -xz \
    && mv /usr/lib/code-server-$CODE_SERVER_VERSION-linux-amd64 $CODE_SERVER_INSTALL_DIR


# Add Microsoft's official repository and install ODBC Driver 18
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg \
    && install -o root -g root -m 644 microsoft.gpg /etc/pki/rpm-gpg/ \
    && curl https://packages.microsoft.com/config/rhel/9/prod.repo > /etc/yum.repos.d/mssql-release.repo \
    && rm -f microsoft.gpg \
    && ACCEPT_EULA=Y dnf install -y msodbcsql18 mssql-tools18 \
    && echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc


# Set working directory
WORKDIR /home/coder

#Copy Vscode extensions
COPY . .

# Install VSCode Extensions
RUN code-server --install-extension ms-python.python \
    && code-server --install-extension GrapeCity.gc-excelviewer \
    && code-server --install-extension extensions/janjoerke.jenkins-pipeline-linter-connector-1.2.0.vsix \
    && code-server --install-extension ms-toolsai.jupyter \
    && code-server --install-extension ritwickdey.LiveServer \
    && code-server --install-extension ms-toolsai.jupyter-keymap \
    && code-server --install-extension njpwerner.autodocstring \
    && code-server --install-extension janjoerke.jenkins-pipeline-linter-connector \
    && code-server --install-extension Continue.continue \
    && code-server --install-extension esbenp.prettier-vscode \
    && code-server --install-extension JFrog.jfrog-vscode-extension

# Create a user to run code-server
RUN useradd -m coder

# Expose the default code-server port
EXPOSE 8080

# Switch to the non-root user
USER coder


# Start code-server
CMD ["code-server", "--bind-addr", "0.0.0.0:8080", "--auth", "none"]
